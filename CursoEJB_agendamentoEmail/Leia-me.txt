

tem que baixar o mysql connector do eclipse

--------------------------

Desenvolvendo um sistema utilizando o Java EE 8 com EJB é preciso configurar a aplicação para se conectar no banco de dados. A equipe de desenvolvedores já criou um datasource com a JNDI java:jboss/datasources/MyProjectDS, que será utilizado pela aplicação.
Como podemos configurar este datasource no persistence.xml?
Declarando a tag jta-data-source e colocando a JNDI do datasource dentro da tag
Alternativa correta! A tag jta-data-source é utilizada para declarar qual datasource configurado no servidor de aplicação será utilizado para a conexão no banco de dados.


O arquivo de propriedade ValidationMessages.properties é utilizado para configurar as mensagens.

***********************************************************************************************************


/c/Desenvolvimento/wildfly-18.0.1.Final/bin
./jboss-cli.bat --connect

jboss-cli.bat --connect


--------------------------

carloss@Carloss MINGW64 /c/Desenvolvimento/wildfly-18.0.1.Final
$ nano standalone/configuration/standalone-full.xml
onde ficam as configuarções gerais 

--------------------------


Clicar no server wildfly no eclipse em:
Open launch configuration e adiconar:

Program Argments:
-mp "C:\Desenvolvimento\wildfly-18.0.1.Final\modules" org.jboss.as.standalone -b localhost --server-config=standalone-full.xml -Djboss.server.base.dir=C:\Desenvolvimento\wildfly-18.0.1.Final\standalone 

Vm Arguments
"-Dprogram.name=JBossTools: WildFly 18 at localhost" -server -Xms64m -Xmx512m -Dorg.jboss.resolver.warning=true -Djava.net.preferIPv4Stack=true -Dsun.rmi.dgc.client.gcInterval=3600000 -Dsun.rmi.dgc.server.gcInterval=3600000 -Djboss.modules.system.pkgs=org.jboss.byteman -Djava.awt.headless=true "-Dorg.jboss.boot.log.file=C:\Desenvolvimento\wildfly-18.0.1.Final\standalone\log\boot.log" "-Dlogging.configuration=file:C:\Desenvolvimento\wildfly-18.0.1.Final\standalone\configuration\logging.properties" "-Djboss.home.dir=C:\Desenvolvimento\wildfly-18.0.1.Final" -Dorg.jboss.logmanager.nocolor=true -Djboss.bind.address.management=localhost 

--------------------------

Os comandos que o instrutor executa são:
module add --name=com.mysql --resources=C:\Desenvolvimento\mysql-connector-java-5.1.15-bin.jar --dependencies=javax.api,javax.transaction.api

Para definir o module como driver:
/subsystem=datasources/jdbc-driver=mysql:add(driver-name=mysql,driver-module-name=com.mysql,driver-xa-datasource-class-name=com.mysql.jdbc.jdbc2.optional.MysqlXADataSource, driver-class-name=com.mysql.jdbc.Driver)


No comando abaixo, que define o datasource, altere o usuário e a senha baseado na sua configuração do banco:
data-source add --name=AgendamentoDS --jndi-name=java:jboss/datasources/AgendamentoDS --driver-name=mysql  --connection-url=jdbc:mysql://localhost:3306/agendamentobd --user-name=root --password=skater --min-pool-size=10 --max-pool-size=20
data-source add --name=AgendamentoDS --jndi-name=java:jboss/datasources/AgendamentoDS --driver-name=mysql  --connection-url=jdbc:mysql://localhost:3306/agendamentobd --user-name=agendamento --password= --min-pool-size=10 --max-pool-size=20

--------------------------


Os comandos para envio de e-mail , usar o https://mailtrap.io/ para e-mails de teste na app
site: https://mailtrap.io/inboxes/773941/messages
/subsystem=mail/mail-session=agendamentoMailSession:add(jndi-name=java:jboss/mail/AgendamentoMailSession)
/socket-binding-group=standard-sockets/remote-destination-outbound-socket-binding=my-smtp-binding:add(host=smtp.mailtrap.io, port=2525)
/subsystem=mail/mail-session=agendamentoMailSession/server=smtp:add(outbound-socket-binding-ref= my-smtp-binding, username=25e093edd87574, password=16c198848520fe, tls=true)


Host: smtp.mailtrap.io
Port: 25 or 465 or 587 or 2525
Username: 25e093edd87574
Password: 16c198848520fe


--------------------------

carloss@Carloss MINGW64 /c/Desenvolvimento/wildfly-18.0.1.Final/bin
$ ./jboss-cli.bat --connect

carloss@Carloss MINGW64 /c/Desenvolvimento/wildfly-18.0.1.Final
$ nano standalone/configuration/standalone-full.xml

--------------------------


Filas - JMQ:

* O comando que o instrutor executa é o seguinte:

jms-queue add --queue-address=EmailQueue --entries=java:/jms/queue/EmailQueue





* E os atributos que o instrutor copia para a classe AgendamentoEmailTimer são os seguintes:

@Inject
@JMSConnectionFactory("java:jboss/DefaultJMSConnectionFactory")
private JMSContext context;

@Resource(mappedName = "java:/jms/queue/EmailQueue")
private Queue queue;




***********************************************************************************************************