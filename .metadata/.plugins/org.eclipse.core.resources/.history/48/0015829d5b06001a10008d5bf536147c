package br.com.caelum.financas.jpql;

import java.math.BigDecimal;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.Query;

import br.com.caelum.financas.modelo.Conta;
import br.com.caelum.financas.modelo.Movimentacao;
import br.com.caelum.financas.modelo.TipoMovimentacao;
import br.com.caelum.financas.util.JPAUtil;

public class TesteCincoFuncoesJPQL {

	public static void main(String[] args) {

		EntityManager em = new JPAUtil().getEntityManager();
		em.getTransaction().begin();

		Conta conta = em.find(Conta.class, 2);

		String jpql = "select m from Movimentacao m where m.conta = :pConta" + " and m.tipoMovimentacao = :pTipo"
				+ " order by m.valor desc";

		Query query = em.createQuery(jpql);
		query.setParameter("pConta", conta);
		query.setParameter("pTipo", TipoMovimentacao.SAIDA);

		List<Movimentacao> resultados = query.getResultList();
		for (Movimentacao movimentacao : resultados) {
			System.out.println("Conta.id: " + movimentacao.getConta().getId());
			System.out.println("Descricao: " + movimentacao.getDescricao());
			System.out.println("Valor: " + movimentacao.getValor());

			System.out.println("----------------------------------------------------");
		}

		/**************
		 * SOMA sum dos valores das movimentacoes
		 *******************************************/

		jpql = "select sum(m.valor) from Movimentacao m where m.conta = :pConta" + " and m.tipoMovimentacao = :pTipo"
				+ " order by m.valor desc";

		query = em.createQuery(jpql);
		query.setParameter("pConta", conta);
		query.setParameter("pTipo", TipoMovimentacao.SAIDA);

		BigDecimal soma = (BigDecimal) query.getSingleResult();

		System.out.println("A soma é: " + soma);

		/**************
		 * Media AVG dos valores das movimentacoes
		 *******************************************/

		jpql = "select avg(m.valor) from Movimentacao m where m.conta = :pConta" + " and m.tipoMovimentacao = :pTipo"
				+ " order by m.valor desc";

		query = em.createQuery(jpql);
		query.setParameter("pConta", conta);
		query.setParameter("pTipo", TipoMovimentacao.SAIDA);

		Double media = (Double) query.getSingleResult();

		System.out.println("A media é: " + media);

		

		/**************
		 * Maximo MAX dos valores das movimentacoes
		 *******************************************/

		jpql = "select max(m.valor) from Movimentacao m where m.conta = :pConta";

		query = em.createQuery(jpql);
		query.setParameter("pConta", conta);

		BigDecimal maiorGasto = (BigDecimal) query.getSingleResult();

		System.out.println("O maior gasto é: " + maiorGasto);
		
		
		
		// em.getTransaction().commit();
		em.close();

	}
}
