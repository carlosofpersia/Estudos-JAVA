package br.com.caelum.jdbc;

import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.sql.Connection;

public class TestaConexao {

	
	
	/*
	 * 
	 * 
	 * 
https://docs.oracle.com/javase/7/docs/api/index.html?java/sql/package-summary.html
	 * 
	 * 
	 * 
P: O que as interfaces Connection, Statement e ResultSet possuem em comum?
R: Todas elas herdam da interface AutoCloseable que indica que um recurso pode ser fechado automaticamente
Obs: uma interface herda de uma outra interface, mas nunca implementa (apenas classes implementam interfaces).



AutoCloseable 

	 * 
	 * 
	 * 
	 * 

Crie um projeto Java chamado loja-virtual no Eclipse e copie o arquivo lib/hsqldb.jar para dentro dele.
site da lib: http://www.hsqldb.org/
adicionar o arquivo : lib/hsqldb.jar
Build Path --> Add to Build Path

java -cp hsqldb.jar org.hsqldb.server.Server --database.0 file:loja-virtual --dbname.0 loja-virtual


gerenciador grafico do banco
java -cp hsqldb.jar  org.hsqldb.util.DatabaseManager
Type: HSQL Database Engine Server
Driver: org.hsqldb.jdbcDriver
URL: jdbc:hsqldb:hsql://localhost/loja-virtual
User: SA
Senha: ''

CREATE TABLE Produto (
    id INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, 
    nome VARCHAR(255), 
    descricao VARCHAR(255)
)


	 * 
	 * */
	
	
	public void insert () throws SQLException {

		Connection connection = new ConnectionPool().getConnection();
		Statement statement = connection.createStatement();
		
		boolean resultado = statement.execute(
				"insert into Produto (nome, descricao) values ('Sansumg A80', 'Celular Sansumg A80 com camera externa')"
				, Statement.RETURN_GENERATED_KEYS);
		
		
		
		System.out.println("O resultado foi: " + resultado);

		//Statement.RETURN_GENERATED_KEYS - retorna o ID Gerado.
        ResultSet resultSet = statement.getGeneratedKeys();

        while (resultSet.next()) {
            String id = resultSet.getString("id");
            System.out.println(id + " gerado");
        }
        
        
		statement.close();
		connection.close();
	}
	

	public void remove () throws SQLException {

		Connection connection = new ConnectionPool().getConnection();
		Statement statement = connection.createStatement();
		
		statement.execute("delete from Produto where id > 3");

		//getUpdateCount verifica quantas linhas foram atualizadas
        int count = statement.getUpdateCount();
        System.out.println(count + " linhas removidas");

        
        
		statement.close();
		connection.close();
	}
	
	public void lista  () throws SQLException {

		
		Connection c = new ConnectionPool().getConnection();
		Statement stmt = c.createStatement();

		boolean resultado = stmt.execute("select * from Produto");
		System.out.println("O resultado foi: " + resultado);

		ResultSet resultSet = stmt.getResultSet();

		while (resultSet.next()) {
			int id = resultSet.getInt("id");
			String nome = resultSet.getString("nome");
			String descricao = resultSet.getString("descricao");
			
		    System.out.println(id + " - " + nome + " - " + descricao);			
		}
		resultSet.close();
		stmt.close();
	}
	
	
	public static void main(String[] args) throws SQLException {
		// Connection mysql = new MysqlConnection("localhost", "u573575673_ispon"
		// "u573575673_mspon", "Sk8456Mudar");

		//java.sql.Connection c = DriverManager.getConnection("jdbc:hsqldb:hsql://localhost/loja-virtual", "SA", "");
		Connection c = new ConnectionPool().getConnection();

		
		TestaConexao tc = new TestaConexao();
		//tc.insert();
		//tc.remove();
		tc.lista();


		c.close();
	}
}
